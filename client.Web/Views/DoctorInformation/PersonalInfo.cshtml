@model client.Web.Models.DoctorsInformationEditModel

@{
    ViewBag.Title = "Personal Info";
}

@using (Html.BeginForm())
{
   
    <div class="c_body innerLayout">

        <div class="c_body_fleet">
            <div class="c_pgTitle">
                <div class="c_pgTitle_Fleet">
                    <h1 class="c_pgTitleText">Steps</h1>
                </div>
            </div>
        </div>

        <div class="c_column_three d_doctorSteps">
            <div class="fleet">
                <div class="steps">
                    <ul>
                        <li class="step1 currentStep">
                            <span>Personal Info</span>
                            <h3>1</h3>
                        </li>
                        <li class="step2 ">
                            <span>Educational Info </span>
                            <h3>2</h3>
                        </li>
                        <li class="step3 ">
                            <span>Video Info</span>
                            <h3>3</h3>
                        </li>
                        <li class="step4 ">
                            <span>Clinic Info</span>
                            <h3>4</h3>
                        </li>
                        <li class="step5 " >
                            <span>Subscription Info</span>
                            <h3>5</h3>
                        </li>
                    </ul>
                    <div class="stepsLine"></div>
                </div>

                <div class="row">
                    <div class="left">
                        <div class="display-field profileDocReview">
                               <div class="boxSep" ><div class="imgLiquidFill imgLiquid " style="width: 100px;height: 120px;"><img  id="viewimg" src="@Model.USERPHOTOFILEPATH"    onload='resizeprofilephoto();' /></div></div>           
                 
                          
                        </div>
                        <div class="editor-field">
                            <input id="UserImageUpload" class="imagedisplay" name="UserImageUpload" type="file" />
                        </div>
                    </div>
                    <div class="right">
                        <div style="float:left;width:555px;">
                            <div class="row">
                                <div class="left">
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.Salutation):
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(model => model.Salutation, new[] {
                                new SelectListItem(){Text = "Mr." ,Value="Mr." },
                                new SelectListItem(){Text = "Ms." ,Value="Ms." },
                                new SelectListItem(){Text = "Mrs." ,Value="Mrs." },
                                new SelectListItem(){Text ="Dr.", Value ="Dr." }
                            }, "Select Salutation", new { @style = "width:128px !important;" })
                                        @Html.ValidationMessageFor(model => model.Salutation)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.FIRSTNAME)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.FIRSTNAME, new { maxlength = "46" })
                                    @Html.ValidationMessageFor(model => model.FIRSTNAME)
                                </div>

                                <div class="editor-label">
                                    @Html.LabelFor(model => model.LASTNAME)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.LASTNAME, new { maxlength = "46" })
                                    @Html.ValidationMessageFor(model => model.LASTNAME)
                                </div>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Languages)<div class="help" title="Select Multiple Languages"></div>
                                </div>
                                @{
    var items = new List<SelectListItem>
                            {
                                new SelectListItem { Value ="AR",Text="Arabic"},
                                new SelectListItem { Value ="EN",Text="English"},
                                new SelectListItem { Value ="FR",Text="French"},
                                new SelectListItem { Value ="DE",Text="German"},
                                new SelectListItem { Value ="EL",Text="Greek"},
                                new SelectListItem { Value ="HI",Text="Hindi"},
                                new SelectListItem { Value ="IT",Text="Italian"},
                                new SelectListItem { Value ="JA",Text="Japanese"},
                                new SelectListItem { Value ="KO",Text="Korean"},
                                new SelectListItem { Value ="ZH",Text="Mandarin"},
                                new SelectListItem { Value ="PL",Text="Polish"},
                                new SelectListItem { Value ="PT",Text="Portuguese"},
                                new SelectListItem { Value ="RO",Text="Romanian"},
                                new SelectListItem { Value ="RU",Text="Russian"},
                                new SelectListItem { Value ="ES",Text="Spanish"},
                                new SelectListItem { Value ="TR",Text="Turkish"},
                                new SelectListItem { Value ="VI",Text="Vietnamese"}
                             };        
                                }

                                <div class="editor-field">
                                    @Html.ListBoxFor(model => model.Languages, items)
                                    @Html.ValidationMessageFor(model => model.Languages)
                                </div>
                            </div>
                            <div class="row DOB">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.DOBMonth):
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.DOBMonth, new[] {
                                new SelectListItem(){Value="1",Text ="Jan"},
                                new SelectListItem(){Value="2",Text ="Feb"},
                                new SelectListItem(){Value="3",Text ="Mar"},
                                new SelectListItem(){Value="4",Text ="Apr"},
                                new SelectListItem(){Value="5",Text ="May"},
                                new SelectListItem(){Value="6",Text ="Jun"},
                                new SelectListItem(){Value="7",Text ="Jul"},
                                new SelectListItem(){Value="8",Text ="Aug"},
                                new SelectListItem(){Value="9",Text ="Sep"},
                                new SelectListItem(){Value="10",Text ="Oct"},
                                new SelectListItem(){Value="11",Text ="Nov"},
                                new SelectListItem(){Value="12",Text ="Dec"}
                                                            }, "Month")
                                    @Html.ValidationMessageFor(model => model.DOBMonth)
                                    &nbsp;
                        @Html.DropDownListFor(model => model.DOBDAY, Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Day")
                                    @Html.ValidationMessageFor(model => model.DOBDAY)
                                    &nbsp; 
                         @Html.DropDownListFor(model => model.DOBYEAR, Enumerable.Range(1900, DateTime.Now.Year - 1899).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Year")

                                    @Html.ValidationMessageFor(model => model.DOBYEAR)

                                    @Html.HiddenFor(model => model.DOBDAYDISPLAY)
                                </div>
                            </div>

                            <div class="row" style="margin-top:20px;">
                                <h6>Contact Info</h6>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.USERSTREETADDRESS1)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.USERSTREETADDRESS1, new { maxlength = "95" })
                                    @Html.ValidationMessageFor(model => model.USERSTREETADDRESS1)
                                </div>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.USERSTREETADDRESS2)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.USERSTREETADDRESS2, new { maxlength = "95" })
                                    @Html.ValidationMessageFor(model => model.USERSTREETADDRESS2)
                                </div>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.CITY)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.CITY, new { maxlength = "35" })
                                    @Html.ValidationMessageFor(model => model.CITY)
                                </div>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.USERSTATE)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.USERSTATE, new[] {
                                      new SelectListItem(){Text= "Andaman and Nicobar Islands" ,Value="Andaman and Nicobar Islands" },
                                      new SelectListItem(){Text= "Andhra Pradesh" ,Value="Andhra Pradesh" },
                                      new SelectListItem(){Text= "Arunachal Pradesh" ,Value="Arunachal Pradesh" },
                                      new SelectListItem(){Text= "Assam" ,Value="Assam" },
                                      new SelectListItem(){Text= "Bihar" ,Value="Bihar" },
                                      new SelectListItem(){Text= "Chandigarh" ,Value="Chandigarh" },
                                      new SelectListItem(){Text= "Chhattisgarh" ,Value="Chhattisgarh" },
                                      new SelectListItem(){Text= "Dadra and Nagar Haveli" ,Value="Dadra and Nagar Haveli" },
                                      new SelectListItem(){Text= "Daman and Diu" ,Value="Daman and Diu" },
                                      new SelectListItem(){Text= "Delhi" ,Value="Delhi" },
                                      new SelectListItem(){Text= "Goa" ,Value="Goa" },
                                      new SelectListItem(){Text= "Gujarat" ,Value="Gujarat" },
                                      new SelectListItem(){Text= "Haryana" ,Value="Haryana" },
                                      new SelectListItem(){Text= "Himachal Pradesh" ,Value="Himachal Pradesh" },
                                      new SelectListItem(){Text= "Jammu and Kashmir" ,Value="Jammu and Kashmir" },
                                      new SelectListItem(){Text= "Jharkhand" ,Value="Jharkhand" },
                                      new SelectListItem(){Text= "Karnataka" ,Value="Karnataka" },
                                      new SelectListItem(){Text= "Kerala" ,Value="Kerala" },
                                      new SelectListItem(){Text= "Lakshadweep" ,Value="Lakshadweep" },
                                      new SelectListItem(){Text= "Madhya Pradesh" ,Value="Madhya Pradesh" },
                                      new SelectListItem(){Text= "Maharashtra" ,Value="Maharashtra" },
                                      new SelectListItem(){Text= "Manipur" ,Value="Manipur" },
                                      new SelectListItem(){Text= "Meghalaya" ,Value="Meghalaya" },
                                      new SelectListItem(){Text= "Mizoram" ,Value="Mizoram" },
                                      new SelectListItem(){Text= "Nagaland" ,Value="Nagaland" },
                                      new SelectListItem(){Text= "Orissa" ,Value="Orissa" },
                                      new SelectListItem(){Text= "Pondicherry" ,Value="Pondicherry" },
                                      new SelectListItem(){Text= "Punjab" ,Value="Punjab" },
                                      new SelectListItem(){Text= "Rajasthan" ,Value="Rajasthan" },
                                      new SelectListItem(){Text= "Sikkim" ,Value="Sikkim" },
                                      new SelectListItem(){Text= "Tamil Nadu" ,Value="Tamil Nadu" },
                                      new SelectListItem(){Text= "Tripura" ,Value="Tripura" },
                                      new SelectListItem(){Text= "Uttaranchal" ,Value="Uttaranchal" },
                                      new SelectListItem(){Text= "Uttar Pradesh" ,Value="Uttar Pradesh" },
                                      new SelectListItem(){Text= "West Bengal" ,Value="West Bengal" },
                                                                      }, "Select")
                                </div>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ZIPCODE)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ZIPCODE, new { maxlength = "6" })
                                    @Html.ValidationMessageFor(model => model.ZIPCODE)
                                </div>
                            </div>
                            <div class="row">
                                <div class="editor-label">
                                    @Html.DisplayNameFor(model => model.CurrenttimeZone)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownList("CurrenttimeZone", Model.CurrenttimeZone)
                                </div>

                            </div>
                        </div>
                        <div class="amy_group" style="float:right;">
                            <p>Your profile is completed</p>
                            <h1>@Html.DisplayFor(model => model.profilecompleted)%</h1>
                            <div class="amy_inner"></div>
                        </div>

                    </div>
                </div>
                <div class="row c_buttonContainer">
                    <div class="right">
                        <input type="submit" value="Next" class="button" />
                    </div>
                </div>


            </div>
        </div>
    </div>

      


   
    <div class="editor-field" style="display: none;">
        <input class="text-box single-line" id="UserName" name="UserName" type="text" value="@Model.UserName" maxlength="100" />
    </div>
   
   
   
}
<script type="text/javascript">


    $(document).ready(function () {

        $("#beforelogin").hide();
        $("#afterlogin").show();
        $("#afterloginsign").hide();

        $('#FIRSTNAME').keyup(function () {
            var $th = $(this);
            $th.val($th.val().replace(/[^a-zA-Z0-9\s]*$/g, function (str) { return ''; }));
        });

       

        $('#LASTNAME').keyup(function () {
            var $th = $(this);
            $th.val($th.val().replace(/[^a-zA-Z0-9\s]*$/g, function (str) { return ''; }));
        });

        $('#DOBMonth').change(function () {
            var month = $(this).val();
            var max;
            if (month == 2) {
                max = 28;
            } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
                max = 31;
            }
            else if (month == 4 || month == 6 || month == 9 || month == 11) {
                max = 30;
            }
            var mySelect = $('#DOBDAY');
            $('#DOBDAY').empty();
            mySelect.append(
                   $('<option></option>').html("Day"));
            for (i = 1; i <= max; i++) {
                mySelect.append(
                    $('<option></option>').val(i).html(i)
                );
            }
        })

        $('#DOBYEAR').change(function () {
            var year = $(this).val();
            var max;
            var month = $('#DOBMonth').val()
            if ((year % 4 == 0) && (year % 100 != 0) || (year % 400 == 0) && month == 2) {
                max = 29;

                var mySelect = $('#DOBDAY');
                $('#DOBDAY').empty();
                mySelect.append(
                       $('<option ></option>').html("Day"));
                for (i = 1; i <= max; i++) {
                    mySelect.append(
                        $('<option></option>').val(i).html(i)
                    );
                }
            } else if (month == 2) {
                max = 28;

                var mySelect = $('#DOBDAY');
                $('#DOBDAY').empty();
                mySelect.append(
                       $('<option></option>').html("Day"));
                for (i = 1; i <= max; i++) {
                    mySelect.append(
                        $('<option></option>').val(i).html(i)
                    );
                }
            }

        })

        if ($("#DOBDAYDISPLAY").val().length > 0) {
            $("#DOBDAY").val($("#DOBDAYDISPLAY").val());
        }

    });

    $('#CITY').keyup(function () {
        var $th = $(this);
        $th.val($th.val().replace(/[^a-zA-Z\s]*$/g, function (str) { return ''; }));
    });
    $('#USERSTREETADDRESS1').keyup(function () {
        var $th = $(this);
        $th.val($th.val().replace(/[^a-zA-Z0-9\s]*$/g, function (str) { return ''; }));
    });
    $('#USERSTREETADDRESS2').keyup(function () {
        var $th = $(this);
        $th.val($th.val().replace(/[^a-zA-Z0-9\s]*$/g, function (str) { return ''; }));
    });

    $('.c_site_search').hide();
    $("#UserImageUpload").kendoUpload({
        async: {
            saveUrl: "/DoctorInformation/Save",
            removeUrl: "/DoctorInformation/Remove",
            autoUpload: true
        },
        multiple: false,
        upload: function (e) {
            e.data = { UserName: "@Model.UserName" };
        },
        success: onSuccess
    });

        function onSuccess(e) {


        }
</script>
