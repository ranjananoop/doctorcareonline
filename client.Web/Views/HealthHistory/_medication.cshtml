@model client.Web.Models.HealthHistoryModel

@using (Html.BeginForm())
{

    <div id="p_mediction_con">
        <div class="row">
       <div class="left"> <div class="editor-label">
            @Html.LabelFor(model => model.MEDICATIONNAME)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.MEDICATIONNAME, new { @Value = "", maxlength = "32" })
            @Html.ValidationMessageFor(model => model.MEDICATIONNAME)
        </div></div>
            
        <div class="left" style="margin-left:20px !important;"> <div class="editor-label">
            @Html.LabelFor(model => model.PRESCRIBEDDATE)
        </div>
        <div class="editor-field">
             @Html.TextBoxFor(model => model.PRESCRIBEDDATE, new { id = "prescribedate", @Value = "" })
            @Html.ValidationMessageFor(model => model.PRESCRIBEDDATE)
        </div></div>
       </div>
        
    <div class="row" >
        <div class="left"> <div class="editor-label">
            @Html.LabelFor(model => model.STOPPEDDATE)
        </div>
        <div class="editor-field">
             @Html.TextBoxFor(model => model.STOPPEDDATE, new { id = "stoppeddate", @Value = "" })
            @Html.ValidationMessageFor(model => model.STOPPEDDATE)
        </div></div>

        
      <div class="left">   <div class="editor-label">
            @Html.LabelFor(model => model.DOCTORID)
        </div>
        <div class="editor-field">
             @Html.TextBoxFor(model => model.DOCTORID, new { @Value = "", maxlength = "46" })
            @Html.ValidationMessageFor(model => model.DOCTORID)
        </div></div>
        </div>
    <div class="row">
    <div class="display-label">
            @Html.LabelFor(model => model.COMMENT)
        </div><br />
    <div class="display-field">
        @Html.TextAreaFor(model => model.COMMENT, new { @cols = 20, @rows = 5, @style = "width: 210px;", maxlength = "700" })
        </div>
        </div>
      
      </div>
    <div class="row c_buttonContainer">
    
        <div class="right">
            <input type="button" value="Save" class="button" id="btnmedication" />
            </div>

  
         </div>
   
    <div id="grid3"></div>
           
   <div class="row c_buttonContainer">
   
        <div class="right">
       <input type="button" value="Delete"  id="btndel9" class="button cancel" /> 
     </div>
     
    </div>

}
<script>


    var MedicationDeleteIDs = [];
    $("#COMMENT").val("");

    $(document).ready(function () {
        $('.advanceQuickSearch').insertBefore('.availableDoctor');


        var now = new Date();
        now.setDate(now.getDate() + 0);
        $("#prescribedate").kendoDatePicker({
            max: now,
            min: new Date(1900, 0, 0)
        });
        var datepickers = $("#prescribedate").data("kendoDatePicker");

        datepickers.value(now);
        var datepickerstop = $("#prescribedate").data("kendoDatePicker");
        $("#stoppeddate").kendoDatePicker({
            min: datepickerstop.value()
        });
        var datepicker = $("#stoppeddate").data("kendoDatePicker");
        datepicker.value(datepickerstop.value());

        var dataSource1 = new kendo.data.DataSource({
            pageSize: 5,
            transport: {
                read: {
                    url: "/HealthHistory/GetMedicationReport",
                    dataType: "json",
                    type: "post",
                    contentType: "application/json; charset=utf-8",
                },
                update: {
                    url: "/HealthHistory/GetMedicationeRep",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                },

                parameterMap: function (data, type) {
                    var medicationReport = new Object();

                    if (type == "update") {
                        medicationReportModel = data.models;
                        return JSON.stringify(data);
                    }
                    return JSON.stringify(data);
                }
            },
            batch: false,
            autoSync: false,
            schema:
                {
                    model: {
                        id: "MEDICATIONID",
                        fields: {
                            MEDICATIONID: { editable: false, nullable: true },
                            MEDICATIONNAME: { type: "string" },
                            PRESCRIBEDDATE: { type: "Date", template: '#= kendo.toString(PRESCRIBEDDATE, "MM/dd/yyyy") #' },
                            STOPPEDDATE: { type: "Date", template: '#= kendo.toString(STOPPEDDATE, "MM/dd/yyyy") #' },
                            COMMENT: { type: "string" }
                        }
                    }
                },
        });


        $("#grid3").kendoGrid({
            dataSource: dataSource1,
            scrollable: true,
            groupable: false,
            sortable: true,
            pageable: true,
            autoBind: true,
            Code: { editable: true },
            editable: "inline",
            columns: [{
                template: "<input type='checkbox' class='target' value='#= MEDICATIONID #'/>",
                title: "Select",
                width: "15%"
            }, {
                field: "MEDICATIONNAME",
                title: "Medication Name",
                width: "25%",
                filterable: false
            }, {
                field: "PRESCRIBEDDATE",
                title: "Prescribed Date",
                width: 110,
                template: '#= kendo.toString(PRESCRIBEDDATE, "MM/dd/yyyy") #',
                filterable: false,
                format: "{0:yyyy-MM-dd}",
                editor: dateTimeEditor

            }, {
                field: "STOPPEDDATE",
                title: "Stopped Date",
               width:110,
                template: '#= kendo.toString(STOPPEDDATE, "MM/dd/yyyy") #',
                filterable: false,
                format: "{0:yyyy-MM-dd}",
                editor: dateTimeEditor
            },
              {
                  title: "View",
                  width: 110, template: "<a  title=${ MEDICATIONID } onclick=setStatus(${ MEDICATIONID },5) class='linkClass'  >View</a>"
              },
                  {
                      command: ["edit"],
                      width: 110,
                      title: "Edit",
                  },

            ]
        });
        function dateTimeEditor(container, options) {
            $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({});
        }

        $('.target').live('change', function () {


            if ($(this).is(':checked')) {

                var MedicationDeleteID = $(this).val();
                MedicationDeleteIDs.push(MedicationDeleteID);

            }
            else {
                var MedicationDeleteID = $(this).val();
                MedicationDeleteIDs.pop(MedicationDeleteID);
            }
        });



        $("#btndel9").click(function () {
            var model = new Object();
            model.MedicationDeleteIDs = MedicationDeleteIDs;
            $.ajax({

                async: false,
                type: "POST",
                cache: false,
                dataType: 'json',
                url: "/HealthHistory/DeleteMedicationRepo",
                contentType: "application/json; charset=utf-8",
                success: function (msg) {
                    if (msg) {
                        $("#MessageUpdateStatus").show();
                        var url = '@Url.Action("upload", "HealthHistory")';
                        window.location.href = url;
                        return true;
                    }
                    else {
                        //anoop changes for meaningful error alerts
                        alert(msg.msg);
                        return;
                    }
                },
                data: JSON.stringify(model)
            });
            location.reload();
        });
    });
    $("#btnmedication").click(function (e) {
        var healthHistroymodel = new Object();

        healthHistroymodel.MEDICATIONNAME = $("#MEDICATIONNAME").val();
        healthHistroymodel.PRESCRIBEDDATE = $("#prescribedate").val();
        healthHistroymodel.STOPPEDDATE = $("#stoppeddate").val();
        if (healthHistroymodel.STOPPEDDATE < healthHistroymodel.PRESCRIBEDDATE) {

            $("#MessageUpdateStatus").val("Error : StoppedDate Cannot be less than prescribed date");

            if ($('#MessageUpdateStatus').val().indexOf('Error') > -1) {
                $('#MessageUpdateStatus').addClass('MessageUpdateStatus');
            } else if ($('#MessageUpdateStatus').val().indexOf('Error') == -1) {
                $('#MessageUpdateStatus').removeClass();
                $('#MessageUpdateStatus').addClass('MessageUpdateStatusNormal');
            }
            $("#MessageUpdateStatus").show();
            e.preventDefault();
            return;
        }
        healthHistroymodel.DOCTORID = $("#DOCTORID").val();
        healthHistroymodel.COMMENT = $("#COMMENT").val();
        $.ajax({
            async: false,
            type: "POST",
            cache: false,
            dataType: 'json',
            url: "/HealthHistory/_medication",
            contentType: "application/json; charset=utf-8",
            success: function (msg) {
                if (msg)
                    $("#MessageUpdateStatus").show();
                var url = '@Url.Action("upload", "HealthHistory")';
                window.location.href = url;

            },
            data: JSON.stringify(healthHistroymodel),
        });


    });
  </script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
 
    #Content_Area textarea {
        height: 100px;
        width: 210px;
        margin-top: 8px;
    }

  
    #grid3 .healHistoryInfo .k-datepicker {
width: 217px !important;
background: #ffffff !important;
}
    #grid3 .k-datepicker, .k-picker-wrap {
width: 80% !important;
height: 22px !important ;
    padding-bottom: 4px;
}
    #grid3 .k-textbox {
width: 134px !important;
height: 29px !important;
}
</style>
