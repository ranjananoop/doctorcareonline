@model client.Web.Models.HealthHistoryModel

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm())
{



        
    <div class="editor-label">
        @Html.LabelFor(model => model.IMMUNIZATIONNAME)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.IMMUNIZATIONNAME, new { @Value = "", maxlength = "32" })
        @Html.ValidationMessageFor(model => model.IMMUNIZATIONNAME)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.IMMUNEDATE)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.IMMUNEDATE, new { id = "immunedate", @rows = 10 })
        @Html.ValidationMessageFor(model => model.IMMUNEDATE)
    </div>
       

       
    <div class="display-label">
        @Html.LabelFor(model => model.IMUCOMMENT, new { @style = "margin:10px 0px 0px 0px;" })
    </div>
    <div class="display-field">
        @Html.TextAreaFor(model => model.IMUCOMMENT, new { @cols = 20, @rows = 3, @style = "width: 210px;", maxlength = "700" })
    </div>

      
    <div class="row c_buttonContainer">

        <div class="right">

            <input type="button" value="Save" class="button" id="btnimmunization" />
        </div>

    </div>
         
  
    <div id="gridimmune"></div>

    <div class="row c_buttonContainer">
        <div class="right">
            <input type="button" value="Delete" id="btndel55" class="button cancel" />
        </div>
    </div>
   
}
<script>


    var ImmuneDeleteIDs = [];
    $(document).ready(function () {
        $('.advanceQuickSearch').insertBefore('.availableDoctor');
        var now = new Date();
        now.setDate(now.getDate() + 0);
        $("#immunedate").kendoDatePicker({
            max: now,
            min: new Date(1900, 0, 0)
        });
        var datepicker = $("#immunedate").data("kendoDatePicker");
        datepicker.value(now);

    });

    $("#COMMENT").val("");
    $(document).ready(function () {
        $("#COMMENT").val("");

        var dataSource1 = new kendo.data.DataSource({
            pageSize: 5,
            transport: {
                read: {
                    url: "/HealthHistory/GetImmuneReport",
                    dataType: "json",
                    type: "post",
                    contentType: "application/json; charset=utf-8",
                },
                update: {
                    url: "/HealthHistory/GetImmuneRep",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                },

                parameterMap: function (data, type) {
                    var immuneReport = new Object();

                    if (type == "update") {
                        immuneModel = data.models;
                        return JSON.stringify(data);
                    }
                    return JSON.stringify(data);
                }
            },
            batch: false,
            autoSync: false,
            schema:
                {
                    model: {
                        id: "IMMUNIZATIONID",
                        fields: {
                            IMMUNIZATIONID: { editable: false, nullable: true },
                            IMMUNIZATIONNAME: { type: "string" },
                            COMMENT: { type: "string" },
                            IMMUNEDATE: { type: "Date", template: '#= kendo.toString(IMMUNEDATE, "MM/dd/yyyy") #' }
                        }
                    }
                },
        });



        $("#gridimmune").kendoGrid({

            dataSource: dataSource1,

            width: "20px",
            groupable: false,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        eq: "Is equal to",
                        neq: "Is not equal to"
                    }
                }
            },
            autoBind: true,
            editable: "inline",
            sortable: true,
            pageable: true,
            Code: { editable: true },
            columns: [
                {
                    template: "<input type='checkbox' class='target' value='#= IMMUNIZATIONID #'/>",
                    title: "Select",
                    width: "15%"
                },
                {
                    field: "IMMUNIZATIONNAME",
                    title: "Immunization Name",
                    width: 220,
                    filterable: false
                },
                {
                    title: "Immune Date",
                    field: "IMMUNEDATE",
                    template: '#= kendo.toString(IMMUNEDATE, "MM/dd/yyyy") #',
                    width: 150,
                    filterable: false,
                    format: "{0:yyyy-MM-dd}",
                    editor: dateTimeEditor
                },

             {
                 title: "View",
                 width: 130, template: "<a  title=${ IMMUNIZATIONID } onclick=setStatus(${ IMMUNIZATIONID },4) class='linkClass'  >View</a>"
             },
                 {
                     command: ["edit"],
                     title: "Edit",

                 }
            ]
        });
        function dateTimeEditor(container, options) {
            $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({});
        }
        $(document).ready(function () {
            $("#COMMENT").val("");
            $('.target').live('change', function () {


                if ($(this).is(':checked')) {

                    var ImmuneDeleteID = $(this).val();
                    ImmuneDeleteIDs.push(ImmuneDeleteID);

                }
                else {
                    var ImmuneDeleteID = $(this).val();
                    ImmuneDeleteIDs.pop(ImmuneDeleteID);
                }
            });

            $("#btndel55").click(function () {

                var model = new Object();
                model.ImmuneDeleteIDs = ImmuneDeleteIDs;
                $.ajax({

                    async: false,
                    type: "POST",
                    cache: false,
                    dataType: 'json',
                    url: "/HealthHistory/DeleteImmuneRepo",
                    contentType: "application/json; charset=utf-8",
                    success: function (msg) {
                        if (msg) {
                            $("#MessageUpdateStatus").show();
                            var url = '@Url.Action("upload", "HealthHistory")';
                        window.location.href = url;
                        return true;
                    }
                },
                 data: JSON.stringify(model)
             });
            location.reload();

        });

        });
        });
$("#btnimmunization").click(function () {
    var healthHistroymodel = new Object();



    healthHistroymodel.IMMUNIZATIONNAME = $("#IMMUNIZATIONNAME").val();
    healthHistroymodel.IMMUNEDATE = $("#immunedate").val();
    healthHistroymodel.COMMENT = $("#IMUCOMMENT").val();
    $.ajax({
        async: false,
        type: "POST",
        cache: false,
        dataType: 'json',
        url: "/HealthHistory/_immunization",
        contentType: "application/json; charset=utf-8",
        success: function (msg) {
            if (msg)
                $("#MessageUpdateStatus").show();
            var url = '@Url.Action("upload", "HealthHistory")';
                window.location.href = url;

            },
            data: JSON.stringify(healthHistroymodel),
        });


    });

</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    #gridimmune .k-datepicker, .k-picker-wrap {
        width: 80% !important;
        height: 22px !important;
        padding-bottom: 4px;
    }

    #gridimmune .k-textbox {
        width: 200px !important;
        height: 29px !important;
    }
</style>
