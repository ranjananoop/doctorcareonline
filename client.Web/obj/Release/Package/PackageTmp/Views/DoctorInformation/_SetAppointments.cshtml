<link rel="stylesheet" href="~/Content/smoothness/jquery-ui-1.8rc3.custom.css" type="text/css" />
<link href="~/Content/smoothness/jquery.weekcalendar.css" rel="stylesheet" />


<script src="~/Scripts/jquery-ui-1.8rc3.custom.min.js"></script>
<script src="~/Scripts/jquery.weekcalendar.js"></script>


<script type='text/javascript'>

    var doctorSlots = [];
    var existingSlots = [];
    var eventData = [];
    var timeSlots = [], startTime, endTime, tempStartTime, tempEndTime;
    $("#textContainers > p").html("");
    $(document).ready(function () {


        $('.toggleCalender.Video').toggle(
            function () {
                $('#calendar').hide();
                $(this).html('Show Calender');
            },
        function () {
            $('#calendar').show();
            $(this).html('Hide Calender');
        }
        );

        calculate_time_zone();
        GetExistingSlots();


        function renderCalendar() {
            timeSlots.sort(function (a, b) {
                //alert('a.start - b.start =' + a.start +'  ' + b.start);
                return a.start - b.start
            });
            $('#calendar').weekCalendar({
                timeSlots: timeSlots,
                appointmentURL: '/DoctorInformation/CreateAppointments?id=',
                isPatient: false,
                timeslotsPerHour: 4,
                useShortDayNames: true,
                businessHours: { start: 7, end: 22, limitDisplay: true },
                height: function ($calendar) {
                    return $(window).height() - $("h1").outerHeight();
                },
                eventRender: function (calEvent, $event) {
                    if (calEvent.end.getTime() < new Date().getTime()) {
                        $event.css("backgroundColor", "#aaa");
                        $event.find(".time").css({ "backgroundColor": "#999", "border": "1px solid #888" });
                    }
                },
                eventNew: function (calEvent, $event) {
                    displayMessage("<strong>Added event</strong><br/>Start: " + calEvent.start + "<br/>End: " + calEvent.end);
                    alert("You've added a new event. You would capture this event, add the logic for creating a new event with your own fields, data and whatever backend persistence you require.");
                },
                eventDrop: function (calEvent, $event) {
                    displayMessage("<strong>Moved Event</strong><br/>Start: " + calEvent.start + "<br/>End: " + calEvent.end);
                },
                eventResize: function (calEvent, $event) {
                    displayMessage("<strong>Resized Event</strong><br/>Start: " + calEvent.start + "<br/>End: " + calEvent.end);
                },
                eventClick: function (calEvent, $event) {
                    displayMessage("<strong>Clicked Event</strong><br/>Start: " + calEvent.start + "<br/>End: " + calEvent.end);
                },
                eventMouseover: function (calEvent, $event) {
                    displayMessage("<strong>Mouseover Event</strong><br/>Start: " + calEvent.start + "<br/>End: " + calEvent.end);
                },
                eventMouseout: function (calEvent, $event) {
                    displayMessage("<strong>Mouseout Event</strong><br/>Start: " + calEvent.start + "<br/>End: " + calEvent.end);
                },
                noEvents: function () {
                    displayMessage("There are no events for this week");
                },
                data: eventData
            });

            $('#calendar').weekCalendar('refresh');
        }



        function displayMessage(message) {
            //alert(message);
            // $("#message").html(message).fadeIn();
        }

        function startChange() {
            var startTime = start.value();

            if (startTime) {
                startTime = new Date(startTime);

                end.max(startTime);

                startTime.setMinutes(startTime.getMinutes() + 15);

                end.min(startTime);
                end.value(startTime);
            }
        }

        //init start timepicker
        var start = $("#start").kendoTimePicker({
            change: startChange,
            interval: 15,
            animation: {
                open: {
                    effects: "fadeIn",
                    duration: 300,
                    show: true
                }
            }
        }).data("kendoTimePicker");

        //init end timepicker
        var end = $("#end").kendoTimePicker({
            interval: 15,
            animation: {
                open: {
                    effects: "fadeIn",
                    duration: 300,
                    show: true
                }
            }
        }).data("kendoTimePicker");

        //define min/max range
        start.min("7:00 AM");
        start.max("10:00 PM");

        //define min/max range
        end.min("7:15 AM");
        end.max("10:30 PM");

        $("#startDate").kendoDatePicker({ value: new Date(), });
        var today = new Date();
        var seventhDay = new Date(today.setDate(today.getDate() + 6));
        $("#endDate").kendoDatePicker({ value: new Date(seventhDay), });


        $("#btnEdit").click(function () {
        });

        $("#btnConfirm").click(function () {
            setAppointmentsVideo();
            $("#confirmDialog").hide();
            $("#overlayContainer").hide();
        });

        $("#btnCancel").click(function () {
            $("#confirmDialog").hide();
            $("#overlayContainer").hide();
            $('html').removeClass('scrollbarOff');

        });

        $("#overlayContainer").insertBefore('.c_container');

        $('#confirmDialog').insertBefore('#overlayContainer');
        $("#overlayContainer").height($(document).outerHeight());

        $('#confirmDialog').css({
            left: ($(window).width() - $('#confirmDialog').outerWidth()) / 2,
            top: ($(window).height() - $('#confirmDialog').outerHeight()) / 2
        });

        $(window).resize(function () {
            $('#confirmDialog').css({
                left: ($(window).width() - $('#confirmDialog').outerWidth()) / 2,
                top: ($(window).height() - $('#confirmDialog').outerHeight()) / 2
            });
        });


        $("#btnAvailability").click(function () {

            var slotsExists = false;
            var deleteConfirm = false;
            //Check for existing slots
            $.ajax({
                async: false,
                type: "POST",
                cache: false,
                dataType: 'json',
                url: "/DoctorInformation/CheckExistingSlots",
                contentType: "application/json; charset=utf-8",
                success: function (msg) {
                    if (msg.msg == "Doctor slot exists in Video") {
                        $("#textContainer > p").html(msg.msg);
                        $("#textContainerdialog > p").html(msg.msg);

                        slotsExists = true;
                    }
                    else {
                        $("#textContainers > p").html(msg.msg);
                        $("#textContainerdialog > p").html(msg.msg);
                    }
                },
                data: JSON.stringify(doctorSlots),
            });

            if (slotsExists) {
                $("#confirmDialog").show();
                $("#overlayContainer").show();
                $('html').addClass('scrollbarOff');

                jQuery.fn.center = function () {
                    this.css("position", "absolute");
                    this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +
                                                                $(window).scrollTop()) + "px");
                    this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +
                                                                $(window).scrollLeft()) + "px");
                    return this;
                }

                $('#confirmDialog').center();
            }
            else {
                setAppointmentsVideo();
            }
        });

        function setAppointmentsVideo() {
            $("#btnConfirm").show();
            $("#divExistingSlot").show();
            var slotsClinicExists = false;
            doctorSlots = [];
            var eventDays = [];
            var notWorkingDays = [];
            var sTime = " 2013 / 1/ 1 " + $("#start").val();
            var eTime = " 2013 / 1/ 1 " + $("#end").val();

            var startDate = new Date(parseInt(new Date($("#startDate").val()).getFullYear()) + ',' + parseInt(new Date($("#startDate").val()).getMonth() + 1) + ',' + parseInt(new Date($("#startDate").val()).getDate()));
            var endDate = new Date(parseInt(new Date($("#endDate").val()).getFullYear()) + ',' + parseInt(new Date($("#endDate").val()).getMonth() + 1) + ',' + parseInt(new Date($("#endDate").val()).getDate()));

            var startHour = new Date(0, 0, 0, parseInt(new Date(sTime).getHours()), parseInt(new Date(sTime).getMinutes()));
            var endHour = new Date(0, 0, 0, new Date(eTime).getHours(), new Date(eTime).getMinutes());
            var notWorkingDays = [];

            var count = 1;

            eventDays = getEventDays(startDate, endDate);
            if (eventDays.length > 0) {
                var jsonObj = '{"events" : [';
                for (var i = 0; i < eventDays.length; i++) {
                    var doctorSlot = new Object();
                    var startMin = new Date(startHour);
                    while (startMin < endHour) {

                        var eventStartDate = new Date(eventDays[i].getMonth() + 1 + '/' + eventDays[i].getDate() + '/' + eventDays[i].getFullYear() + ' ' + startMin.getHours() + ':' + startMin.getMinutes()).getTime();
                        startMin.setMinutes(startMin.getMinutes() + 15);
                        var eventEndDate = new Date(eventDays[i].getMonth() + 1 + '/' + eventDays[i].getDate() + '/' + eventDays[i].getFullYear() + ' ' + startMin.getHours() + ':' + startMin.getMinutes()).getTime();

                        var event = ' { "id": ' + count + ', "start":' + eventStartDate + ', "end":' + eventEndDate + ', "title": "" },';
                        jsonObj += event;
                        count++;
                        doctorSlot = { FROMTIME: new Date(eventStartDate), CALYEAR: eventDays[i].getFullYear(), CALMONTH: eventDays[i].getMonth() + 1, CALDATE: eventDays[i].getDate(), TOTIME: new Date(eventEndDate), AVAILABILITYMODE: 'V', TimeZoneOffset:document.getElementById('timezoneOffset').value, DSTObserved:document.getElementById('dstObserved').value };
                        doctorSlots.push(doctorSlot);
                    }
                }
                jsonObj = jsonObj.substr(0, jsonObj.length - 1);
                jsonObj += ']}';
                eventData = $.parseJSON(jsonObj);

                //renderCalendar();	         
                $.ajax({
                    async: false,
                    type: "POST",
                    cache: false,
                    dataType: 'json',
                    url: "/DoctorInformation/SetDoctorsSlotstest",
                    contentType: "application/json; charset=utf-8",
                    success: function (msg) {
                        if (msg.msg == "Succesfully Created") {
                            $("#textContainer > p").html(msg.msg);
                            GetExistingSlots();
                            return;
                        }
                        else {
                            $("#textContainer > p").html(msg.msg);
                            eventData = null;
                            GetExistingSlots();
                        }
                        if (msg.msg == "Slot Already Exists in Clinic Appointments") {
                            // $("#textContainers > p").html(msg.msg);
                            $("#textContainerdialog > p").html(msg.msg);
                            $("#btnConfirm").hide();
                            $("#divExistingSlot").hide();
                            slotsClinicExists = true;
                        }
                    },
                    data: JSON.stringify(doctorSlots),
                });
                if (slotsClinicExists) {
                    $('html').css('overflow-y', 'hidden !important');
                    $("#confirmDialog").show();
                    $("#overlayContainer").show();
                    $('html').addClass('scrollbarOff');

                    jQuery.fn.center = function () {
                        this.css("position", "absolute");
                        this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +
                                                                    $(window).scrollTop()) + "px");
                        this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +
                                                                    $(window).scrollLeft()) + "px");
                        return this;
                    }

                    $('#confirmDialog').center();
                    slotsClinicExists = false;
                }
                else {
                    window.location.reload();
                }
            }
           // window.location.reload();
        }

        function getEventDays(stDate, ndDate) {
            var eDays = [];
            while (stDate <= ndDate) {

                if ($('#daysbox input:checked').length > 0) {
                    var isChecked = false;
                    $('#daysbox input:checked').each(function () {
                        if (stDate.getDay() == parseInt($(this).attr('name'))) {
                            isChecked = true;
                            return false;
                        }
                    });
                    if (!isChecked) {
                        eDays.push(new Date(stDate));
                    }
                }
                else
                    eDays.push(new Date(stDate));
                stDate.setDate(stDate.getDate() + 1);
            }

            return eDays;
        }

        function GetExistingSlots() {
            var doctorSlot = {
                TimeZoneOffset: document.getElementById('timezoneOffset').value,
                DSTObserved: document.getElementById('dstObserved').value
            };
            $.getJSON("/DoctorInformation/GetExistingSlots", doctorSlot, function (data) {
                existingSlots = data;

                var isStart = false;

                var jsonObj = '{"events" : [';

                if (existingSlots.length > 0) {
                    for (var i = 0; i < existingSlots.length; i++) {
                        //alert('existingSlots.length=' + existingSlots.length);
                        var stDate = new Date(parseInt(existingSlots[i].FROMTIME.substring(6, existingSlots[i].FROMTIME.length - 2)));
                        var ndDate = new Date(parseInt(existingSlots[i].TOTIME.substring(6, existingSlots[i].TOTIME.length - 2)));
                        // alert(stDate + '   ' + ndDate);
                        tempStartTime = stDate.getHours();
                        if (ndDate.getMinutes() > 0)
                            tempEndTime = ndDate.getHours() + 1;
                        else
                            tempEndTime = ndDate.getHours();
                        if (!isStart) {
                            startTime = tempStartTime;
                            endTime = tempEndTime;
                            isStart = true;
                            if (existingSlots.length == 1) {
                                var slot = { "start": startTime, "end": endTime };
                                // alert(slot);
                                timeSlots.push(slot);
                            }
                        }
                        else {
                            if (endTime != tempStartTime) {

                                var slot = { "start": startTime, "end": endTime };
                                if (!containsObject(slot, timeSlots)) {
                                    //alert( "start ="+ startTime +"end="+ endTime );
                                    timeSlots.push(slot);

                                }
                            }
                            startTime = tempStartTime
                            endTime = tempEndTime;
                        }

                    }
                    // alert('timeSlots.length='+timeSlots.length);
                    //alert(timeSlots[0].start + '  ' + timeSlots[0].end + '  ' + timeSlots[1].start + '  ' + timeSlots[1].end);
                    //alert(timeSlots[2].start + '  ' + timeSlots[2].end + '  ' + timeSlots[3].start + '  ' + timeSlots[3].end);
                }
                if (existingSlots.length > 0) {
                    for (var i = 0; i < existingSlots.length; i++) {
                        var stDate = new Date(parseInt(existingSlots[i].FROMTIME.substring(6, existingSlots[i].FROMTIME.length - 2)));
                        var ndDate = new Date(parseInt(existingSlots[i].TOTIME.substring(6, existingSlots[i].TOTIME.length - 2)));

                        var eventStartDate = new Date(stDate.getMonth() + 1 + '/' + stDate.getDate() + '/' + stDate.getFullYear() + ' ' + stDate.getHours() + ':' + stDate.getMinutes()).getTime();
                        var eventEndDate = new Date(ndDate.getMonth() + 1 + '/' + ndDate.getDate() + '/' + ndDate.getFullYear() + ' ' + ndDate.getHours() + ':' + ndDate.getMinutes()).getTime();


                        var event = ' { "id": ' + existingSlots[i].DOCTORSLOTID + ', "start":' + eventStartDate + ', "end":' + eventEndDate + ', "title": "" },';
                        jsonObj += event;
                    }
                }
                jsonObj = jsonObj.substr(0, jsonObj.length - 1);
                jsonObj += ']}';
                eventData = $.parseJSON(jsonObj);
                renderCalendar();

            });
        }
    });

    function containsObject(obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i].start === obj.start && list[i].end === obj.end) {
                return true;
            }
        }
        return false;
    }

</script>

<div id="edit4" class="videoAppointments">
    <div id="overlayContainer" style="display: none;"></div>
    <div id="dialog-form">

        <div id="myAvailabilityDiv">


            <div class="availableTime">
                <div class="row">
                    <div class="subTitle"><b>Time</b></div>
                    <div class="left">
                        <label for="start">Start Time:</label>
                        <input id="start" value="7:00 AM" />
                    </div>
                    <div class="left">
                        <label for="end">End Time:</label>
                        <input id="end" value="7:15 AM" />
                    </div>
                </div>
                <div class="row">
                    <div class="subTitle"><b>Date</b></div>
                    <div class="left">
                        <label>Start Date:</label>
                        <input id="startDate" />
                    </div>
                    <div class="left">

                        <label>End Date:</label>
                        <input id="endDate" />
                    </div>
                </div>
                <div class="row">
                    <div class="subTitle"><b>Select not working day</b></div>
                    <ul id="daysbox" class="daysbox">
                        <li>
                            <input type="checkbox" name="1" value="true" id="monday">
                            <input type="hidden" id="__checkbox_monday" name="__checkbox_monday" value="true">
                            Monday
                        </li>
                        <li>
                            <input type="checkbox" name="2" value="true" id="tuesday">
                            <input type="hidden" id="__checkbox_tuesday" name="__checkbox_tuesday" value="true">
                            Tuesday
                        </li>
                        <li>
                            <input type="checkbox" name="3" value="true" id="wednesday">
                            <input type="hidden" id="__checkbox_wednesday" name="__checkbox_wednesday" value="true">
                            Wednesday
                        </li>
                        <li>
                            <input type="checkbox" name="4" value="true" id="thursday">
                            <input type="hidden" id="__checkbox_thursday" name="__checkbox_thursday" value="true">
                            Thursday
                        </li>
                        <li>
                            <input type="checkbox" name="5" value="true" id="friday">
                            <input type="hidden" id="__checkbox_friday" name="__checkbox_friday" value="true">
                            Friday
                        </li>
                        <li>
                            <input type="checkbox" name="6" value="true" id="saturday">
                            <input type="hidden" id="__checkbox_saturday" name="__checkbox_saturday" value="true">
                            Saturday
                        </li>
                        <li>
                            <input type="checkbox" name="0" value="true" id="sunday">
                            <input type="hidden" id="__checkbox_sunday" name="__checkbox_sunday" value="true">
                            Sunday
                        </li>
                    </ul>

                </div>
            </div>


            <div class="row">
                <div id="textContainer">
                    <p></p>
                </div>
                <div id="confirmDialog">
                    <div class="popupcontent">
                    <div id="textContainerdialog">
                        <p></p>
                    </div>
                    <div id="divExistingSlot">Exisitng Slots will be updated. Please confirm.</div>
                        </div>
                    <div class="row c_buttonContainer">
                        <div class="right">

                            <input type="button" value="Cancel" id="btnCancel" class="button cancel" />
                            <input type="button" value="Confirm" id="btnConfirm" class="button" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row c_buttonContainer" style="margin-top:20px;">
                <div class="right" style="float: right !important;">
                    <input type="button" id="btnAvailability" value="Update" class="button" />
                </div>
            </div>
            <div class="row">
                <div class="linkClass toggleCalender Video">Hide Calender</div>
                <div id="view4" class="videoAppointmentCalender">
                    <div id='calendar'></div>
                </div>
            </div>
           
        </div>
    </div>
</div>


@*<div id="test"></div>*@



<input type="hidden" name="availabilityModeSave" value="V" id="availabilityModeSave">
<input type="hidden" name="workDaysString" value="" id="workDaysString">
<input type="hidden" name="startTimeHidden" value="" id="startTimeHidden">
<input type="hidden" name="endTimeHidden" value="" id="endTimeHidden">
<input type="hidden" name="startDateHidden" value="" id="startDateHidden">
<input type="hidden" name="endDateHidden" value="" id="endDateHidden">
